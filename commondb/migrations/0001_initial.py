# Generated by Django 4.2.6 on 2024-04-11 03:28

import commondb.models.booking
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_paid_member', models.BooleanField(default=False, verbose_name='有料会員')),
                ('is_manage_member', models.BooleanField(default=False, verbose_name='管理者')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー一覧',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='会社名')),
                ('address', models.CharField(max_length=100, verbose_name='所在地')),
                ('established_date', models.DateField(verbose_name='設立日')),
                ('capital', models.CharField(max_length=100, verbose_name='資本金')),
                ('number_of_staff', models.CharField(max_length=100, verbose_name='従業員数')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ジャンル名')),
                ('image', models.ImageField(blank=True, null=True, upload_to='genre_images', verbose_name='バナー画像')),
            ],
        ),
        migrations.CreateModel(
            name='Reguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='規約名')),
                ('text', models.TextField(default='', max_length=10000, verbose_name='規約本文')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='店舗名')),
                ('name_alphabet', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[a-zA-Z\\s]+$')], verbose_name='店舗名アルファベット表記')),
                ('address', models.CharField(max_length=100, verbose_name='所在地')),
                ('phone', models.CharField(max_length=20, verbose_name='電話番号')),
                ('time', models.CharField(max_length=100, verbose_name='営業時間')),
                ('price_low', models.CharField(max_length=5, verbose_name='下限価格')),
                ('price_high', models.CharField(max_length=5, verbose_name='上限価格')),
                ('image', models.ImageField(blank=True, null=True, upload_to='restaurant_images', verbose_name='画像')),
                ('information', models.TextField(max_length=300, verbose_name='お店の説明')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commondb.area', verbose_name='エリア')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commondb.genre', verbose_name='カテゴリー')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField(verbose_name='訪問日')),
                ('rating', models.IntegerField(choices=[(1, '★'), (2, '★★'), (3, '★★★'), (4, '★★★★'), (5, '★★★★★')], verbose_name='評価')),
                ('comment', models.TextField(verbose_name='コメント')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='review_images/', verbose_name='画像')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='review_images/', verbose_name='画像')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='review_images/', verbose_name='画像')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commondb.restaurant', verbose_name='店名')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー名')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='commondb.restaurant', verbose_name='店舗名')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー名')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField(validators=[commondb.models.booking.future_date_validator], verbose_name='予約日')),
                ('booking_time', models.TimeField(default=datetime.time(18, 0), verbose_name='予約時間')),
                ('numbers_of_ppl', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(8)], verbose_name='予約人数')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commondb.restaurant', verbose_name='店舗名')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー名')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription_record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='年')),
                ('month', models.PositiveIntegerField(verbose_name='月')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'unique_together': {('user', 'year', 'month')},
            },
        ),
    ]
